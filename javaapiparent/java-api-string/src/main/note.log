API定义：
应用程序接口（Applicaition processer interface）,别人写好
代码以类的形式封装，开发者可以自由的调用

Object类：所有类都继承Object类

equals方法判断两个对象是否相等：
equals和==的区别
==：
== 比较的是变量(栈)内存中存放的对象的(堆)内存地址，用来判断两个对象的地址是否相同，即是否是指相同一个对象。比较的是真正意义上的指针操作。

1、比较的是操作符两端的操作数是否是同一个对象。
2、两边的操作数必须是同一类型的（可以是父子类之间）才能编译通过。
3、比较的是地址，如果是具体的阿拉伯数字的比较，值相等则为true，如：
int a=10 与 long b=10L 与 double c=10.0都是相同的（为true），因为他们都指向地址为10的堆。

equals：
　　equals用来比较的是两个对象的内容是否相等，由于所有的类都是继承自java.lang.Object类的，
所以适用于所有对象，如果没有对该方法进行覆盖的话，调用的仍然是Object类中的方法，
而Object中的equals方法返回的却是==的判断。

    private String name;
    private int age;
    private char gender;
    private double height;


重写toString方法的好处：
可以自定义对象的字符串表示，这是Object类提供的方法


String类
String是一个不可以改变的字符串类，它是JDK1.0版本提供的，所有的字符串类都是String类，该类
被final修饰所以不能被子类继承,该类提供了大量的APIString对象和操作String
对象
创建String对象
1、通过字符串字面量创建字符串对象
   String aa="hello";
2、通过String类提供的构造器创建String对象





 try{
   语句块1
   语句块2
   语句块3
   ......
   语句块n
   语句块n+1
 }catch(异常类型1 e1){
      语句块1
 }catch(异常类型2 e2){
    语句块2
 }catch(异常类型3 e3){
    语句块3
 }catch(异常类型4 e4){
    语句块4
 }catch(异常类型5 e5){
     语句块5
 }finally{
    //此处的语句库无论如何都会被只能
 }


